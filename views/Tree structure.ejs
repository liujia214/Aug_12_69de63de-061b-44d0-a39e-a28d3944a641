<!DOCTYPE html>
<html>
<head lang="en">
    <meta charset="UTF-8">
    <title></title>
    <style>
        .display{
            display: block;
        }
        .hide{
            display: none;
        }
    </style>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.0.0-alpha1/jquery.min.js"></script>
    <script>
        $(document).ready(function(){
            var object = {children:[]};

            var span = $('span');

            var margin = 20;
            Array.prototype.forEach.call(span,function(ele){
                createTree(ele,object);
            });

            function createTree(ele,parentobj,defaultdisplay) {
                ele.setAttribute('data-display', 'false');
                ele.addEventListener('click', function () {


                    var display = defaultdisplay? defaultdisplay : $(this).attr('data-display');

                    //get Parent margin-left
                    //var parentmargin = $(this).parent().css('margin-left').slice(0,-2);


                    if(display === 'false'){
                        $(this).html('[-]');
                        $(this).attr('data-display','true');
                        $(this).siblings().removeClass('hide');
                        $(this).siblings().addClass('display');


                        defaultdisplay = 'true';
                        //create new node
                        var a = this.parentNode.lastChild.children;
                        if(a.length === 0){
                            var div = document.createElement('div');
                            var input = document.createElement('input');

                            $(div).css('margin-left',margin);
                            input.type = 'text';
                            this.parentNode.appendChild(div);
                            div.appendChild(input);

                            inputEvent(input,parentobj,margin);
                        }

                    }else{
                        $(this).html('[+]');
                        $(this).attr('data-display','false');
                        defaultdisplay = 'false';
                        $(this).siblings().removeClass('display');
                        $(this).siblings().addClass('hide');

                    }
                }, false);
            }

            function loadFromJson(newnode,parentobj,parentnode,index){
                //console.log(newnode);
                //console.log(parentobj);
                //console.log(parentnode);
                if(parentnode){
                    var div = document.createElement('div');
                    div.innerHTML = newnode.value;

                    //console.log(margin);
                    $(div).css('margin-left',margin);

                    parentnode.insertBefore(div,parentnode.lastElementChild);

                    if(newnode.children.length>0){
                        div.innerHTML += "<span>[-]</span>";
                        var span = div.getElementsByTagName('span')[0];

                        console.log(parentobj);
                        console.log(index);
                        createTree(span,parentobj.children[index],'true');

                        var inputdiv = document.createElement('div');
                        $(inputdiv).css('margin-left',margin);
                        var input = document.createElement('input');
                        input.type = 'text';
                        inputdiv.appendChild(input);
                        div.appendChild(inputdiv);


                        inputEvent(input,parentobj,margin);


                        newnode.children.forEach(function(ele,ind){
                            loadFromJson(ele,parentobj.children[index],div,ind);
                        });
                    }else{
                        div.innerHTML += "<span>[+]</span>";
                        var span = div.getElementsByTagName('span')[0];
                        //console.log(parentobj);
                        //console.log(parentobj.children);
                        //console.log(index);
                        createTree(span,parentobj.children[index]);
                    }

                }else{
                    $('#root span').html('[-]');
                    var inputdiv = document.createElement('div');
                    $(inputdiv).css('margin-left',20);
                    var input = document.createElement('input');
                    input.type = 'text';
                    inputdiv.appendChild(input);
                    $('#root').append(inputdiv);

                    inputEvent(input,parentobj,20);

                    if(newnode.children.length>0){
                        newnode.children.forEach(function(ele,index){
                            loadFromJson(ele,parentobj,document.getElementById('root'),index);
                        })
                    }

                }

            }

            function inputEvent(input,parentobj,margin){
                input.addEventListener('keypress',function(e){
                    if(this.value === "") return;
                    if(e.keyCode === 13){
                        var newnode = document.createElement('div');
                        newnode.innerHTML = input.value + '<span>[+]</span>';
                        $(newnode).css('margin-left',margin);
                        input.parentNode.parentNode.insertBefore(newnode,input.parentNode);

                        //push new node to object
                        var uuid = generateUUID();
                        //console.log(parentobj);
                        parentobj.children.push({children:[],value:input.value,uuid:uuid});

                        this.value = "";
                        createTree(newnode.getElementsByTagName('span')[0],parentobj.children[parentobj.children.length-1]);
                    }
                },false);
            }

            function generateUUID() {
                var d = new Date().getTime();
                var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
                    var r = (d + Math.random()*16)%16 | 0;
                    d = Math.floor(d/16);
                    return (c=='x' ? r : (r&0x3|0x8)).toString(16);
                });
                return uuid;
            };

            $('a').on('click',function(){
                this.href += encodeURIComponent(JSON.stringify(object));
            });

            $('input[type="file"]').on('change',function(){
                var filereader = new FileReader();
                filereader.addEventListener('loadend',function(){
                    var obj = JSON.parse(decodeURIComponent(this.result));
                    if(obj) object = obj;
                    //console.log(obj);
                    //console.log(object);

                    console.log('======');
                    var siblings = $('#root span').siblings();
                    for(var i =0;i<siblings.length;i++){
                        document.getElementById('root').removeChild(siblings[i]);
                    }

                    loadFromJson(obj,object);

                })
                filereader.readAsText(this.files[0]);
            });

            $('input[type="checkbox"]').click(function () {
                $('input[type="text"]').toggleClass('hide');
            })

            $('#savelocal').click(function(){
                console.log(object);
                localStorage.setItem('nodeobj',object);
                console.log(typeof  localStorage.getItem('nodeobj'));
                console.log('save to local');
            });

            $('#loadfromlocal').click(function(){
                //console.log(localStorage.getItem('nodeobj').children);
                loadFromJson(localStorage.getItem('nodeobj'),object);
            });
        });
    </script>
</head>
<body>
    <input type="checkbox">hide input
    <div id="root">Root Node <span>[+]</span></div>
    <a href="data:text/json;charset=utf-8," download="data.json">download json</a>
    <input type="file">
    <button id="savelocal">save local</button>
    <button id="loadfromlocal">load from local</button>
</body>
</html>